group   'com.txrlabs.microservice.tps'
version getVersion()

def getVersion() {
    if (System.getenv('BUILD_NUMBER'))
        if (System.getenv('GIT_BRANCH') == 'origin/master')
            "0.1.${System.getenv('BUILD_NUMBER')}"
        else
            "0.0.${System.getenv('BUILD_NUMBER')}-SNAPSHOT"
    else
        '0.0.0-SNAPSHOT'
}

new File('version').withWriter { out ->
    out.print project.version
}

subprojects {

    group   parent.project.group
    version parent.project.version

    apply(plugin: 'groovy')
    apply(plugin: 'java')

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
    }

    dependencies {

        // apache commons
        compile group: 'org.apache.commons',        name: 'commons-lang3', version: '3.4'
        compile group: 'org.apache.httpcomponents', name: 'httpclient',    version: '4.5.2'

        // old apache commons
        compile group: 'commons-logging', name: 'commons-logging', version: '1.2'
        compile group: 'commons-io',      name: 'commons-io',      version: '2.5'
        compile group: 'commons-codec',   name: 'commons-codec',   version: '1.10'

        // json mapper
        compile group: 'com.fasterxml.jackson.datatype',   name: 'jackson-datatype-joda',   version: '2.8.1'
        compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.8.1'
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-core',        version: '2.8.1'
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.8.1'
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind',    version: '2.8.1'

        // logging
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'

        // testing
        // -------

        // groovy
        testCompile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.7'

        // junit
        testCompile group: 'junit', name: 'junit', version: '4.12'

        // spock
        testCompile(group: 'org.spockframework', name: 'spock-core', version: '1.1-groovy-2.4-rc-3') {
            exclude module: 'groovy-all'
        }

        // spock - mocks
        testCompile group: 'cglib',         name: 'cglib-nodep', version: '2.2.2'
        testCompile group: 'org.objenesis', name: 'objenesis',   version: '2.2'
    }

    apply plugin: 'jacoco'

    jacoco {
        toolVersion = "0.7.5+"
    }

    test {
        jacoco {
            append = false
            destinationFile = file("$buildDir/coverage-results/coverage.exec")
            classDumpFile   = file("$buildDir/tmp/jacoco")
        }
    }


    jacocoTestReport {
        reports {

            xml.enabled true
            xml.destination "${buildDir}/coverage-results/coverage.xml"

            csv.enabled true
            csv.destination "${buildDir}/coverage-results/coverage.csv"

            html.enabled true
            html.destination "${buildDir}/reports/coverage"
        }
    }

    test {
        doLast {
            jacocoTestReport.execute()
        }
    }
}
